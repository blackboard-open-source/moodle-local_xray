{"version":3,"sources":["../src/toggle_categories.js"],"names":["define","$","str","ajax","Templates","init","data","self","catPrefix","coursePrefix","joinedInputName","json_data","JSON","parse","lang_strs","www_root","formIsValid","selection","rootcat","id","loadCategory","initExpandCollapseButtons","loadSelection","rawVal","val","split","on","event","preventDefault","expandAllCategories","recurseCategoryCollapse","callback","expandBtnNode","collapseBtnNode","append","prop","recurseCategoryExpand","children","remove","cat","toggleCategoryUI","categories","courses","catSelector","hasClass","click","length","recurseCategoriesExpand","idx","cats","c","createCategoryListeners","createListenersInCategory","addMyListenerToCategories","myListener","change","parentListener","addMyListenerToCourses","addMyListenerToCourse","course","checked","is","updateCourseSelection","addClickListenersToCategories","addClickListenersToCategory","selectCategory","stopPropagation","catInput","checkCategory","expandCategory","allowusage","submitBtn","catLbl","indeterminate","atLeastOneCourseChecked","areCoursesIndeterminate","atLeastOneCourseUnChecked","atLeastOneCatChecked","areCatsIndeterminate","areCatsChecked","areCoursesChecked","atLeastOneCatUnCheckedDisabled","checkCategories","recursiveCategoryCheck","allowMyUsage","checkMyStuff","checkCourses","res","Object","keys","catCount","catIndCount","catLength","courseCount","courseLength","addCourseToSelection","remCourseFromSelection","join","indexOf","push","splice","getSelectedCourseIdx","selCourse","selIdx","cid","loaded","when","url","dataType","success","error","then","emptyCat","catDef","renderCategories","courseDef","renderCourses","applyStatusToCategories","empty","parentCat","defs","myDef","Deferred","def","renderCategory","apply","CollapsibleLists","applyTo","document","getElementById","resolve","categorytree","xraycategory","xraysubcategory","content","name","render","done","html","applyStatusToCategory","renderCourse","courselink","courselabel","xraycourse","coursechecked","shortname","ready"],"mappings":"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","sourcesContent":["/**\n * Javascript for enabling toggling of categories in course config of X-Ray\n *\n * @author David Castro / Rafael Becerra\n * @param YUI, $, str, ajax, Templates\n * @param data\n */\ndefine(['jquery', 'core/str', 'core/ajax', 'core/templates'],\n    function ($, str, ajax, Templates) {\n        return {\n            init: function (data) {\n                var self = this;\n                // Global vars.\n                var catPrefix = '#cat_';\n                var coursePrefix = '#id_courses_';\n                var joinedInputName = 'joined_courses';\n                var idSubmitBtn = '#id_submitbutton';\n\n                // Get values from backend.\n                var json_data = JSON.parse(data);\n                self.lang_strs = json_data.lang_strs;\n                self.www_root = json_data.www_root;\n                self.formIsValid = true;\n\n                // Self properties.\n                self.selection = [];\n\n                // Root category.\n                self.rootcat = {id: 0};\n\n                // Initializing function.\n                self.init = function () {\n                    self.loadCategory(self.rootcat, self.initExpandCollapseButtons);\n                    self.loadSelection();\n                };\n\n                /**\n                 * Loads the selection that comes from a hidden field into a data structure.\n                 */\n                self.loadSelection = function () {\n                    var rawVal = $('[name=' + joinedInputName + ']').val();\n                    if (rawVal && rawVal !== '') {\n                        self.selection = rawVal.split(',');\n                    }\n                };\n\n                self.initExpandCollapseButtons = function () {\n                    $('#xrayexpandallbtn').on('click', function (event) {\n                        event.preventDefault();\n                        self.expandAllCategories(function () {\n                        });\n                    });\n\n                    $('#xraycollapseallbtn').on('click', function (event) {\n                        event.preventDefault();\n                        self.recurseCategoryCollapse(self.rootcat);\n                    });\n                };\n\n                self.expandAllCategories = function (callback) {\n                    var expandBtnNode = $('#xrayexpandallbtn'), collapseBtnNode = $('#xraycollapseallbtn');\n                    expandBtnNode.append('<span class=\"xray_validate_loader\"></span>');\n                    expandBtnNode.prop('disabled', true);\n                    collapseBtnNode.prop('disabled', true);\n                    self.recurseCategoryExpand(self.rootcat, function () {\n                        expandBtnNode.children('.xray_validate_loader').remove();\n                        expandBtnNode.prop('disabled', false);\n                        collapseBtnNode.prop('disabled', false);\n                        callback();\n                    });\n                };\n\n                self.recurseCategoryExpand = function (cat, callback) {\n                    // Load the category before clicking it to ensure that all subcategories have loaded.\n                    self.toggleCategoryUI(cat, false);\n                    self.loadCategory(cat, function () {\n                        if (!cat.categories && !cat.courses) {\n                            return;\n                        }\n\n                        var catSelector = $(catPrefix + cat.id + '_li');\n                        if (catSelector.hasClass('xray-collapsible-list-closed')) {\n                            catSelector.click();\n                            self.toggleCategoryUI(cat, false);\n                        }\n\n                        if (!cat.categories || cat.categories.length === 0) {\n                            self.toggleCategoryUI(cat, true);\n                            callback();\n                        } else {\n                            self.recurseCategoriesExpand(0, cat.categories, function () {\n                                self.toggleCategoryUI(cat, true);\n                                callback();\n                            });\n                        }\n                    });\n                };\n\n                self.recurseCategoriesExpand = function (idx, cats, callback) {\n                    if (idx < cats.length) {\n                        var nextIdx = idx + 1;\n                        self.recurseCategoryExpand(cats[idx], function () {\n                            self.recurseCategoriesExpand(nextIdx, cats, callback);\n                        });\n                    } else {\n                        callback();\n                    }\n                };\n\n                self.recurseCategoryCollapse = function (cat) {\n                    if (!cat.categories && !cat.courses) {\n                        return;\n                    }\n\n                    var catSelector = $(catPrefix + cat.id + '_li');\n                    if (catSelector.hasClass('xray-collapsible-list-open')) {\n                        catSelector.click();\n                    }\n\n                    if (!cat.categories) {\n                        return;\n                    }\n\n                    for (var c in cat.categories) {\n                        self.recurseCategoryCollapse(cat.categories[c]);\n                    }\n                };\n\n                /**\n                 * Creates category listeners for the categories.\n                 * @param cats\n                 */\n                self.createCategoryListeners = function (cats) {\n                    if (!cats) {\n                        return;\n                    }\n\n                    for (var c in cats) {\n                        self.createListenersInCategory(cats[c]);\n                    }\n                };\n\n                /**\n                 * Adds the category status update listener to the child courses.\n                 * @param cat Parent category\n                 */\n                self.addMyListenerToCategories = function (cat) {\n                    if (cat.categories && cat.myListener) {\n                        for (var c in cat.categories) {\n                            $(catPrefix + cat.categories[c].id).change(cat.myListener);\n                            cat.categories[c].parentListener = cat.myListener;\n                        }\n                    }\n                };\n\n                /**\n                 * Adds the category status update listener to the child courses.\n                 * @param cat Parent category\n                 */\n                self.addMyListenerToCourses = function (cat) {\n                    if (cat.courses && cat.myListener) {\n                        for (var c in cat.courses) {\n                            self.addMyListenerToCourse(cat, cat.courses[c]);\n                        }\n                    }\n                };\n\n                /**\n                 * Adds the category status updates listener to a specific course.\n                 * @param cat Parent category\n                 * @param course Child course\n                 */\n                self.addMyListenerToCourse = function (cat, course) {\n                    $(coursePrefix + course.id).change(function () {\n                        var checked = $(this).is(\":checked\");\n                        self.updateCourseSelection(course, checked);\n                        cat.myListener();\n                    });\n                };\n\n                /**\n                 * Adds the click listeners to a list of categories for selection and expansion\n                 * @param cats Categories whose ui will receive the listeners\n                 */\n                self.addClickListenersToCategories = function (cats) {\n                    if (!cats) {\n                        return;\n                    }\n\n                    for (var c in cats) {\n                        self.addClickListenersToCategory(cats[c]);\n                    }\n                };\n\n                /**\n                 * Adds the click listeners to a category rendered ui for selection and expansion\n                 * @param cat Specific category whose ui will receive the listeners\n                 */\n                self.addClickListenersToCategory = function (cat) {\n                    var selectCategory = function (event) {\n                        event.stopPropagation();\n                        var catInput = $(this);\n                        // Check sub categories and courses.\n                        self.toggleCategoryUI(cat, false);\n                        self.checkCategory(cat, catInput.prop('checked'), function () {\n                            self.toggleCategoryUI(cat, true);\n                        });\n                    };\n\n                    var expandCategory = function (event) {\n                        event.stopPropagation();\n                        self.toggleCategoryUI(cat, false);\n                        self.loadCategory(cat, function () {\n                            self.toggleCategoryUI(cat, true);\n                        });\n                    };\n\n                    // Add click handler to checks to check children when parent is checked.\n                    $(catPrefix + cat.id).on('click', selectCategory);\n                    // Add click handler to checks to check children when parent is checked.\n                    $(catPrefix + cat.id + '_li').on('click', expandCategory);\n                };\n\n                /**\n                 * Toggles the usage of the category ui\n                 * @param cat Category\n                 * @param allowusage Can it be used?\n                 */\n                self.toggleCategoryUI = function (cat, allowusage) {\n                    var catInput = $(catPrefix + cat.id), submitBtn = $(idSubmitBtn),\n                        catLbl = $(catPrefix + cat.id + '_lbl'),\n                        disabledstr = 'disabled';\n\n                    catInput.prop(disabledstr, !allowusage);\n                    submitBtn.prop(disabledstr, !allowusage || !self.formIsValid);\n                    if (allowusage) {\n                        catLbl.children('.xray_validate_loader').remove();\n                    } else {\n                        catLbl.append('<span class=\"xray_validate_loader\"></span>');\n                    }\n\n                };\n\n                /**\n                 * Creates status update listeners in a specific category\n                 * @param cat Specific category\n                 */\n                self.createListenersInCategory = function (cat) {\n                    cat.myListener = function () {\n                        var indeterminate = self.atLeastOneCourseChecked(cat.courses) &&\n                            self.areCoursesIndeterminate(cat.courses);\n\n                        indeterminate = indeterminate || (\n                            self.atLeastOneCourseChecked(cat.courses) &&\n                            self.atLeastOneCourseUnChecked(cat.courses));\n\n                        indeterminate = indeterminate || (\n                            self.atLeastOneCatChecked(cat.categories) &&\n                            self.areCatsIndeterminate(cat.categories));\n\n                        if (cat.courses && cat.categories) {\n                            indeterminate = indeterminate || (\n                                self.areCatsChecked(cat.categories) &&\n                                !self.areCoursesChecked(cat.courses));\n\n                            indeterminate = indeterminate || (\n                                self.areCoursesChecked(cat.courses) &&\n                                self.atLeastOneCatUnCheckedDisabled(cat.categories));\n                        }\n\n                        var checked = indeterminate ||\n                            self.atLeastOneCatChecked(cat.categories) ||\n                            self.atLeastOneCourseChecked(cat.courses);\n\n                        var catInput = $(catPrefix + cat.id);\n                        catInput.prop('checked', checked);\n                        catInput.prop('indeterminate', indeterminate);\n\n                        if (cat.parentListener) {\n                            cat.parentListener();\n                        }\n                    };\n\n                    cat.myListener();\n                };\n\n                /**\n                 * Apply a check status to a list of categories\n                 * @param cats Categories\n                 * @param checked Check status\n                 * @param callback Executed after all categories' check status has been applied\n                 */\n                self.checkCategories = function (cats, checked, callback) {\n                    for (var c in cats) {\n                        self.toggleCategoryUI(cats[c], false);\n                    }\n                    self.recursiveCategoryCheck(0, cats, checked, callback);\n                };\n\n                /**\n                 * Recursive category check that applies check status on idx category in cats\n                 * @param idx Index where check recursion is at right now\n                 * @param cats Categories\n                 * @param checked Check status\n                 * @param callback Executed after all categories' check status has been applied\n                 */\n                self.recursiveCategoryCheck = function (idx, cats, checked, callback) {\n                    if (idx < cats.length) {\n                        var nextIdx = idx + 1;\n                        self.checkCategory(cats[idx], checked, function () {\n                            self.recursiveCategoryCheck(nextIdx, cats, checked, callback);\n                        });\n                    } else {\n                        callback();\n                    }\n                };\n\n                /**\n                 * Applies the check status to a specific category\n                 * @param cat\n                 * @param checked\n                 * @param callback\n                 */\n                self.checkCategory = function (cat, checked, callback) {\n                    // Allow usage of this category (Even if it is disabled).\n                    var allowMyUsage = function () {\n                        self.toggleCategoryUI(cat, true);\n                        cat.myListener();\n                        return callback();\n                    };\n\n                    var catInput = $(catPrefix + cat.id);\n\n                    catInput.prop('checked', checked);\n\n                    var checkMyStuff = function () {\n                        if (cat.courses) {\n                            self.checkCourses(cat.courses, checked);\n                        }\n\n                        if (cat.categories) {\n                            if (cat.categories.length > 0) {\n                                self.checkCategories(cat.categories, checked, allowMyUsage);\n                            } else {\n                                allowMyUsage();\n                            }\n                        } else {\n                            allowMyUsage();\n                        }\n\n                        if (cat.parentListener) {\n                            cat.parentListener();\n                        }\n                    };\n\n                    self.loadCategory(cat, checkMyStuff);\n                };\n\n                /**\n                 * Applies check status to specific courses\n                 * @param courses\n                 * @param checked\n                 */\n                self.checkCourses = function (courses, checked) {\n                    for (var c in courses) {\n                        $(coursePrefix + courses[c].id).prop('checked', checked);\n                        self.updateCourseSelection(courses[c], checked);\n                    }\n                };\n\n                /**\n                 * Queries the list of categories to see if all are checked\n                 * @param cats\n                 * @returns {boolean} true if all are checked, false otherwise\n                 */\n                self.areCatsChecked = function (cats) {\n                    if (!cats) {\n                        return false;\n                    }\n\n                    var res = true;\n                    for (var c in cats) {\n                        res = res && ($(catPrefix + cats[c].id).prop('checked'));\n                    }\n                    return res;\n                };\n\n                /**\n                 * Queries the list of categories to see if at least one is checked\n                 * @param cats\n                 * @returns {boolean} true if at least one is checked, false otherwise\n                 */\n                self.atLeastOneCatChecked = function (cats) {\n                    if (!cats) {\n                        return false;\n                    }\n\n                    var res = false;\n                    for (var c in cats) {\n                        res = res || $(catPrefix + cats[c].id).prop('checked');\n                        if (res) {\n                            break;\n                        }\n                    }\n                    return res;\n                };\n\n                self.atLeastOneCatUnCheckedDisabled = function (cats) {\n                    if (!cats) {\n                        return false;\n                    }\n\n                    for (var c in cats) {\n                        if (!$(catPrefix + cats[c].id).prop('checked')) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n\n                self.atLeastOneCourseUnChecked = function (courses) {\n                    if (!courses) {\n                        return false;\n                    }\n\n                    for (var c in courses) {\n                        if (!$(coursePrefix + courses[c].id).prop('checked')) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n\n                /**\n                 * Queries the list of courses to see if all are checked\n                 * @param courses\n                 * @returns {boolean} true if all are checked, false otherwise\n                 */\n                self.areCoursesChecked = function (courses) {\n                    if (!courses || Object.keys(courses).length === 0) {\n                        return true;\n                    }\n\n                    var res = true;\n                    for (var c in courses) {\n                        res = res && $(coursePrefix + courses[c].id).prop('checked');\n                    }\n                    return res;\n                };\n\n                /**\n                 * Queries the list of categories to see if all their courses are checked\n                 * @param cats\n                 * @returns {boolean} true if some categories are incomplete, false if all categories are completely selected\n                 */\n                self.areCatsIndeterminate = function (cats) {\n                    if (!cats) {\n                        return false;\n                    }\n\n                    var catCount = 0, catIndCount = 0, catLength = Object.keys(cats).length;\n                    for (var c in cats) {\n                        catCount += ($(catPrefix + cats[c].id).prop('checked')) ? 1 : 0;\n                        catIndCount += $(catPrefix + cats[c].id).prop('indeterminate') ? 1 : 0;\n                    }\n                    return catCount < catLength || catIndCount > 0;\n                };\n\n                /**\n                 * Queries the list of courses to see if the number of checked courses is equal to the number of courses\n                 * @param courses\n                 * @returns {boolean} true if not all course are selected, false otherwise\n                 */\n                self.areCoursesIndeterminate = function (courses) {\n                    if (!courses) {\n                        return false;\n                    }\n\n                    var courseCount = 0, courseLength = Object.keys(courses).length;\n                    for (var c in courses) {\n                        courseCount += $(coursePrefix + courses[c].id).prop('checked') ? 1 : 0;\n                    }\n                    return courseCount < courseLength;\n                };\n\n                /**\n                 * Queries the list of courses to check if at least one is checked\n                 * @param courses\n                 * @returns {boolean} true if at least one is checked, false otherwise\n                 */\n                self.atLeastOneCourseChecked = function (courses) {\n                    if (!courses) {\n                        return false;\n                    }\n\n                    var res = false;\n                    for (var c in courses) {\n                        res = res || $(coursePrefix + courses[c].id).prop('checked');\n                        if (res) {\n                            break;\n                        }\n                    }\n                    return res;\n                };\n\n                /**\n                 * Updates the course selection with the data of a course and its check status\n                 * @param course Course info\n                 * @param checked Check status\n                 */\n                self.updateCourseSelection = function (course, checked) {\n                    if (checked) {\n                        self.addCourseToSelection(course);\n                    } else {\n                        self.remCourseFromSelection(course);\n                    }\n                    $('[name=' + joinedInputName + ']').val(self.selection.join(','));\n                };\n\n                /**\n                 * Adds a course to the current selection (To be saved)\n                 * @param course\n                 */\n                self.addCourseToSelection = function (course) {\n                    if (self.selection.indexOf(course.id) === -1) {\n                        self.selection.push(course.id);\n                    }\n                };\n\n                /**\n                 * Removes a course from the current selection (To be saved)\n                 * @param course\n                 */\n                self.remCourseFromSelection = function (course) {\n                    var idx = self.selection.indexOf(course.id);\n                    while (idx > -1) {\n                        self.selection.splice(idx, 1);\n                        idx = self.selection.indexOf(course.id);\n                    }\n                };\n\n                /**\n                 * Gets the index of a course given the course \"to save\" data\n                 * @param selCourse\n                 * @returns {number} The index of the course, -1 if not found\n                 */\n                self.getSelectedCourseIdx = function (selCourse) {\n                    var res = -1;\n                    for (var selIdx in self.selection) {\n                        if (self.selection[selIdx].cid === selCourse.cid) {\n                            res = selIdx;\n                            break;\n                        }\n                    }\n                    return res;\n                };\n\n                /**\n                 * Loads a category via Ajax from moodle, this loads whatever children the category has if they have not been loaded\n                 * already.\n                 * @param cat Category whose children will be loaded\n                 * @param callback Executed after all children have loaded\n                 */\n                self.loadCategory = function (cat, callback) {\n                    if (cat.loaded) {\n                        if (callback) {\n                            callback();\n                        }\n                        return;\n                    }\n\n                    cat.loaded = true;\n\n                    $.when(\n                        $.ajax({\n                            url: (self.www_root + '/local/xray/view.php'\n                            ) + '?controller=courseapi' + '&action=listcategories' + '&categoryid=' + cat.id,\n                            dataType: \"json\",\n                            success: function (data) {\n                                if (!data || data.length === 0) {\n                                    return;\n                                }\n\n                                cat.categories = data;\n                            },\n                            error: function () {\n                                cat.loaded = false;\n                            }\n                        }),\n                        $.ajax({\n                            url: (self.www_root + '/local/xray/view.php'\n                            ) + '?controller=courseapi' + '&action=listcourses' + '&categoryid=' + cat.id,\n                            dataType: \"json\",\n                            success: function (data) {\n                                if (!data || data.length === 0) {\n                                    return;\n                                }\n\n                                cat.courses = data;\n                            },\n                            error: function () {\n                                cat.loaded = false;\n                            }\n                        })\n                    ).then(function () {\n                        if (!cat.loaded) {\n                            if (callback) {\n                                callback();\n                            }\n                            return;\n                        }\n\n                        self.emptyCat(cat);\n                        var catDef = self.renderCategories(cat, cat.categories);\n                        $.when(catDef).then(function () {\n                            var courseDef = self.renderCourses(cat, cat.courses);\n                            $.when(courseDef).then(function () {\n                                self.createCategoryListeners(cat.categories);\n                                self.addClickListenersToCategories(cat.categories);\n\n                                self.addMyListenerToCategories(cat);\n                                self.addMyListenerToCourses(cat);\n\n                                self.applyStatusToCategories(cat.categories);\n\n                                if (callback) {\n                                    callback();\n                                }\n                            });\n                        });\n                    });\n                };\n\n                /**\n                 * Empties the UI for children in a category, used for emptying the loading dialogue\n                 * @param cat\n                 */\n                self.emptyCat = function (cat) {\n                    $(catPrefix + cat.id + '_children').empty();\n                };\n\n                /**\n                 * Renders a los of categories in the UI\n                 * @param parentCat\n                 * @param cats\n                 */\n                self.renderCategories = function (parentCat, cats) {\n\n                    if (!cats) {\n                        return;\n                    }\n                    var defs = [], myDef = $.Deferred();\n                    for (var c in cats) {\n                        var def = self.renderCategory(parentCat, cats[c]);\n                        defs.push(def);\n                    }\n                    $.when.apply($, defs).then(function () {\n                        /*global CollapsibleLists:true*/\n                        /*eslint no-undef: \"error\"*/\n                        CollapsibleLists.applyTo(document.getElementById('cat_' + parentCat.id + '_children'));\n                        myDef.resolve();\n                    });\n\n                    return myDef;\n                };\n\n                /**\n                 * Renders a specific category\n                 * @param parentCat Parent category\n                 * @param cat Category to be rendered\n                 */\n                self.renderCategory = function (parentCat, cat) {\n\n                    var catDef = $.Deferred();\n                    var categorytree = self.rootcat.id == parentCat.id ?\n                        self.lang_strs.xraycategory :\n                        self.lang_strs.xraysubcategory;\n                    var content = {\n                        'categoryid': cat.id,\n                        'categoryname': cat.name,\n                        'categorytree': categorytree\n                    };\n                    Templates.render('local_xray/render_category', content).done(function (html) {\n                        $(catPrefix + parentCat.id + '_children').append(html);\n                        catDef.resolve();\n                    });\n                    return catDef;\n                };\n\n                /**\n                 * Applies the loaded check/selection status to a list of categories\n                 * @param cats\n                 */\n                self.applyStatusToCategories = function (cats) {\n                    if (!cats) {\n                        return;\n                    }\n\n                    for (var c in cats) {\n                        self.applyStatusToCategory(cats[c]);\n                    }\n                };\n\n                /**\n                 * Applies the loaded check/selection status to a specific category\n                 * @param cat\n                 */\n                self.applyStatusToCategory = function (cat) {\n                    $(catPrefix + cat.id).prop('indeterminate', cat.indeterminate);\n                    $(catPrefix + cat.id).prop('checked', cat.checked);\n                };\n\n                /**\n                 * Renders the UI of a list of courses\n                 * @param parentCat\n                 * @param courses\n                 */\n                self.renderCourses = function (parentCat, courses) {\n                    if (!courses) {\n                        return;\n                    }\n\n                    var defs = [], myDef = $.Deferred();\n\n                    for (var c in courses) {\n                        var def = self.renderCourse(parentCat, courses[c]);\n                        defs.push(def);\n                    }\n\n                    $.when.apply($, defs).then(function () {\n                        myDef.resolve();\n                    });\n\n                    return myDef;\n                };\n\n                /**\n                 * Renders the Ui of a specific course\n                 * @param parentCat Parent category of the course\n                 * @param course Course to be rendered\n                 */\n                self.renderCourse = function (parentCat, course) {\n\n                    var courseDef = $.Deferred();\n                    var courselink = self.www_root + '/course/view.php?id=' + course.id;\n                    var courselabel = self.lang_strs.xraycourse;\n                    var coursechecked = (course.checked ? 'checked=\"checked\" ' : ' ');\n                    var content = {\n                        'courseid': course.id,\n                        'coursename': course.name,\n                        'courseshortname': course.shortname,\n                        'courselink': courselink,\n                        'courselabel': courselabel,\n                        'coursechecked': coursechecked\n                    };\n                    Templates.render('local_xray/render_course', content).done(function (html) {\n                        $(catPrefix + parentCat.id + '_children').append(html);\n                        courseDef.resolve();\n                    });\n\n                    return courseDef;\n                };\n\n                $(document).ready(function () {\n                    self.init();\n                });\n            }\n        };\n    });\n"],"file":"toggle_categories.min.js"}